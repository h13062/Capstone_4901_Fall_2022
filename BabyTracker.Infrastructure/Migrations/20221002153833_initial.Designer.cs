// <auto-generated />
using System;
using BabyTracker.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BabyTracker.Infrastructure.Migrations
{
    [DbContext(typeof(BabyTrackerDbContext))]
    [Migration("20221002153833_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BabyTracker.Core.Entity.Baby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EatEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EatStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.Property<DateTime>("PlayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PlayStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SleepEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SleepStart")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Babys");
                });

            modelBuilder.Entity("BabyTracker.Core.Entity.BabySitter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BabyId")
                        .HasColumnType("int");

                    b.Property<string>("BabySitterName")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("BabyId");

                    b.ToTable("BabySitters");
                });

            modelBuilder.Entity("BabyTracker.Core.Entity.Parent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BabyId")
                        .HasColumnType("int");

                    b.Property<string>("ParentName")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("BabyId");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("BabyTracker.Core.Entity.BabySitter", b =>
                {
                    b.HasOne("BabyTracker.Core.Entity.Baby", "Baby")
                        .WithMany()
                        .HasForeignKey("BabyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Baby");
                });

            modelBuilder.Entity("BabyTracker.Core.Entity.Parent", b =>
                {
                    b.HasOne("BabyTracker.Core.Entity.Baby", "Baby")
                        .WithMany()
                        .HasForeignKey("BabyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Baby");
                });
#pragma warning restore 612, 618
        }
    }
}
